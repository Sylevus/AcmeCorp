// <auto-generated />
using System;
using AcmeCorps.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AcmeCorps.Data.Migrations
{
    [DbContext(typeof(AcmeCorpContext))]
    [Migration("20230222001711_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.14");

            modelBuilder.Entity("AcmeCorps.Data.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            EmailAddress = "Customer1@dev.com",
                            FirstName = "Darth",
                            LastName = "Vader"
                        },
                        new
                        {
                            CustomerId = 2,
                            EmailAddress = "Customer2@dev.com",
                            FirstName = "ObiWan",
                            LastName = "Kenobi"
                        },
                        new
                        {
                            CustomerId = 3,
                            EmailAddress = "Customer3@dev.com",
                            FirstName = "Luke",
                            LastName = "Skywalker"
                        });
                });

            modelBuilder.Entity("AcmeCorps.Data.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaymentAccountNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Tax")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Total")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("AcmeCorps.Data.Models.RefreshToken", b =>
                {
                    b.Property<int>("RefreshTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("JwtId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Used")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RefreshTokenId");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("AcmeCorps.Data.Models.RolesMaster", b =>
                {
                    b.Property<long>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.HasKey("RoleId");

                    b.ToTable("RolesMaster");

                    b.HasData(
                        new
                        {
                            RoleId = 1L,
                            CreatedOn = new DateTime(2023, 2, 21, 18, 17, 10, 884, DateTimeKind.Local).AddTicks(7692),
                            RoleName = "Admin",
                            UpdatedOn = new DateTime(2023, 2, 21, 18, 17, 10, 884, DateTimeKind.Local).AddTicks(7726)
                        });
                });

            modelBuilder.Entity("AcmeCorps.Data.Models.UserRoles", b =>
                {
                    b.Property<long>("UserRolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("UserRolesId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRolesId = 1L,
                            RoleId = 1L,
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("AcmeCorps.Data.Models.UsersMaster", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("UsersMaster");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            CreatedOn = new DateTime(2023, 2, 21, 18, 17, 10, 884, DateTimeKind.Local).AddTicks(7789),
                            Email = "taylor.walston@comcast.net",
                            FirstName = "Taylor",
                            LastName = "Walston",
                            Password = "Password",
                            PhoneNumber = "5555555555",
                            UpdatedOn = new DateTime(2023, 2, 21, 18, 17, 10, 884, DateTimeKind.Local).AddTicks(7792),
                            UserName = "twalston"
                        });
                });

            modelBuilder.Entity("AcmeCorps.Data.Models.Order", b =>
                {
                    b.HasOne("AcmeCorps.Data.Models.Customer", null)
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AcmeCorps.Data.Models.RefreshToken", b =>
                {
                    b.HasOne("AcmeCorps.Data.Models.UsersMaster", "User")
                        .WithMany("RefreshToken")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AcmeCorps.Data.Models.UserRoles", b =>
                {
                    b.HasOne("AcmeCorps.Data.Models.RolesMaster", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AcmeCorps.Data.Models.UsersMaster", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AcmeCorps.Data.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("AcmeCorps.Data.Models.RolesMaster", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("AcmeCorps.Data.Models.UsersMaster", b =>
                {
                    b.Navigation("RefreshToken");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
